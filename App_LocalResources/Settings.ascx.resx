<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>DNNReferralModule Settings</value>
  </data>
  <data name="ItemTemplate.Text" xml:space="preserve">
    <value>&lt;div&gt;
&lt;h3&gt;&lt;a href="[PackageLink]"&gt;[PackageName]&lt;/a&gt;&lt;/h3&gt;
&lt;a href="[PackageLink]"&gt;&lt;img src="[PackageIcon]"/&gt;&lt;/a&gt;
&lt;p&gt;[PackagePrice]&lt;/p&gt;
&lt;/div&gt;</value>
  </data>
  <data name="lblItemTemplate.Help" xml:space="preserve">
    <value>Enter the HTML template used to rendor the output. possible tokens are [PackageName], [PackageId], [PackageLink], [PackagePrice], [PackageIcon], [PackageRatingNumber], [PackageRatingImage], [VendorName], [VendorLink]</value>
  </data>
  <data name="lblItemTemplate.Text" xml:space="preserve">
    <value>Item Template</value>
  </data>
  <data name="lblMode.Help" xml:space="preserve">
    <value>Select the rendor mode from the drop down list. This is how you can specify what type of product list you would like this module to pull from the store.</value>
  </data>
  <data name="lblMode.Text" xml:space="preserve">
    <value>Select Render Mode</value>
  </data>
  <data name="lblNoResultsTemplate.Help" xml:space="preserve">
    <value>Enter what you would like displayed in the event that no results are returned from the server</value>
  </data>
  <data name="lblNoResultsTemplate.Text" xml:space="preserve">
    <value>No Results Template</value>
  </data>
  <data name="lblNumberOfResults.Help" xml:space="preserve">
    <value>Enter the number of results you would like to display</value>
  </data>
  <data name="lblNumberOfResults.Text" xml:space="preserve">
    <value>Number of products to Display</value>
  </data>
  <data name="lblPrimaryTemplate.Help" xml:space="preserve">
    <value>Enter the HTML template used to rendor the output. possible tokens are [RowTemplate]</value>
  </data>
  <data name="lblPrimaryTemplate.Text" xml:space="preserve">
    <value>Primary Template</value>
  </data>
  <data name="lblReferralCode.Help" xml:space="preserve">
    <value>Enter your referral Id here.</value>
  </data>
  <data name="lblReferralCode.Text" xml:space="preserve">
    <value>Referral Id</value>
  </data>
  <data name="lblRowTemplate.Help" xml:space="preserve">
    <value>Enter the HTML template used to rendor the output. possible tokens are [ItemTemplate]</value>
  </data>
  <data name="lblRowTemplate.Text" xml:space="preserve">
    <value>Row Template</value>
  </data>
  <data name="lblSearchParameter.Help" xml:space="preserve">
    <value>Enter the query string search paramiter key that this module should listen for</value>
  </data>
  <data name="lblSearchParameter.Text" xml:space="preserve">
    <value>Search Parameter</value>
  </data>
  <data name="lblSortOrder.Help" xml:space="preserve">
    <value>Select the default sort order that you would like to apply to the results</value>
  </data>
  <data name="lblSortOrder.Text" xml:space="preserve">
    <value>Sort Order</value>
  </data>
  <data name="lblVendorId.Help" xml:space="preserve">
    <value>If you would like to display only your products, enter your vendor Id here.</value>
  </data>
  <data name="lblVendorId.Text" xml:space="preserve">
    <value>Vendor Id</value>
  </data>
  <data name="liMyProducts.Text" xml:space="preserve">
    <value>My Products</value>
  </data>
  <data name="liNameAsc.Text" xml:space="preserve">
    <value>Product Name Ascending</value>
  </data>
  <data name="liNameDes.Text" xml:space="preserve">
    <value>Product Name Descending</value>
  </data>
  <data name="liPriceAsc.Text" xml:space="preserve">
    <value>Price Ascending</value>
  </data>
  <data name="liPriceDes.Text" xml:space="preserve">
    <value>Price Descending</value>
  </data>
  <data name="liPublishedDateDesc.Text" xml:space="preserve">
    <value>Published Date Descending</value>
  </data>
  <data name="liRecentSalesRevenueDesc.Text" xml:space="preserve">
    <value>Recent Sales Revenue Descending</value>
  </data>
  <data name="liRecentSalesUnitsDesc.Text" xml:space="preserve">
    <value>Recent Units Sold Descending</value>
  </data>
  <data name="liRelevance.Text" xml:space="preserve">
    <value>Relevance</value>
  </data>
  <data name="liReviewDesc.Text" xml:space="preserve">
    <value>Review Average Descending</value>
  </data>
  <data name="liSalesRevenueDesc.Text" xml:space="preserve">
    <value>Total Sales Revenue Descending</value>
  </data>
  <data name="liSalesUnitsDesc.Text" xml:space="preserve">
    <value>Total Units Sold Descending</value>
  </data>
  <data name="liDynamicSearchResults.Text" xml:space="preserve">
    <value>Dynamic Search Results</value>
  </data>
  <data name="liTopModules.Text" xml:space="preserve">
    <value>Top Selling Modules</value>
  </data>
  <data name="liTopSkins.Text" xml:space="preserve">
    <value>Top Selling Skins</value>
  </data>
  <data name="liUpdatedDateDesc.Text" xml:space="preserve">
    <value>Updated Date Descending</value>
  </data>
  <data name="NoResultsTemplate.Text" xml:space="preserve">
    <value>&lt;span&gt;Sorry, no products that match your criteria were found.&lt;/span&gt;</value>
  </data>
  <data name="PrimaryTemplate.Text" xml:space="preserve">
    <value>&lt;div style="width: 300px; padding:5px;"&gt;[RowTemplate]&lt;/div&gt;</value>
  </data>
  <data name="RowTemplate.Text" xml:space="preserve">
    <value>&lt;div&gt;[ItemTemplate]&lt;/div&gt;</value>
  </data>
  <data name="Mode.Text" xml:space="preserve">
    <value>TopModules</value>
  </data>
  <data name="NumberOfResults.Text" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="SortOrder.Text" xml:space="preserve">
    <value>RecentSalesRevenueDesc</value>
  </data>
  <data name="btnClearCache.Text" xml:space="preserve">
    <value>Clear Cache</value>
  </data>
  <data name="CacheDuration.Text" xml:space="preserve">
    <value>3600</value>
  </data>
  <data name="EnableCache.Text" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="lblCacheDuration.Help" xml:space="preserve">
    <value>Enter (in seconds) the amount of time you would like to cache the product data for.</value>
  </data>
  <data name="lblCacheDuration.Text" xml:space="preserve">
    <value>Cache Duration</value>
  </data>
  <data name="lblClearCache.Help" xml:space="preserve">
    <value>Click the button to the right to clear and data that might be cached by this module.</value>
  </data>
  <data name="lblClearCache.Text" xml:space="preserve">
    <value>Clear Cache</value>
  </data>
  <data name="lblEnableCache.Help" xml:space="preserve">
    <value>Check this box to enable caching of the product data.</value>
  </data>
  <data name="lblEnableCache.Text" xml:space="preserve">
    <value>Enable Cache</value>
  </data>
  <data name="NotAValidNumber.ErrorMessage" xml:space="preserve">
    <value>Not a valid whole number</value>
  </data>
  <data name="Required.ErrorMessage" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="lblStaticSearch.Help" xml:space="preserve">
    <value>Enter the search text you would like this module to display the results for</value>
  </data>
  <data name="lblStaticSearch.Text" xml:space="preserve">
    <value>Static Search Text</value>
  </data>
  <data name="liStaticSearchResults.Text" xml:space="preserve">
    <value>Static Search Results</value>
  </data>
  <data name="lblEnableFallBackMode.Help" xml:space="preserve">
    <value>Check this box to configure the fall back mode to be used in the event that the search returns no results.</value>
  </data>
  <data name="lblEnableFallBackMode.Text" xml:space="preserve">
    <value>Enable Fall Back Mode</value>
  </data>
  <data name="lblFallBackMode.Help" xml:space="preserve">
    <value>Select the rendor mode from the drop down list. This is how you can specify what type of product list you would like this module to pull from the store.</value>
  </data>
  <data name="lblFallBackMode.Text" xml:space="preserve">
    <value>Select Fall Back Mode</value>
  </data>
  <data name="lblFallBackSortOrder.Help" xml:space="preserve">
    <value>Select how you would like the the fall back results to be sorted</value>
  </data>
  <data name="lblFallBackSortOrder.Text" xml:space="preserve">
    <value>Select Fall Back Sort Order</value>
  </data>
</root>